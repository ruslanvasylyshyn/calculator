{"version":3,"sources":["components/Buttons/Button.jsx","components/Input/Input.jsx","components/Buttons/ClearButton.jsx","App.jsx","index.js"],"names":["Button","props","className","val","children","isNaN","onClick","handleClick","Input","input","ClearButton","handleClear","App","addToInput","setState","state","handleEqual","math","this","Component","ReactDOM","render","document","getElementById"],"mappings":"8UAKaA,G,MAAS,SAAAC,GAAK,OACzB,yBACEC,UAAS,0BAJMC,EAKFF,EAAMG,SALIC,MAAMF,IAAgB,MAARA,GAAuB,MAARA,EAKd,WAAP,OAE/BG,QAAS,kBAAML,EAAMM,YAAYN,EAAMG,YAEtCH,EAAMG,UATQ,IAAAD,ICANK,G,MAAQ,SAAAP,GAAK,OACxB,yBAAKC,UAAU,SACZD,EAAMQ,SCFEC,G,MAAc,SAAAT,GAAK,OAC9B,yBACEC,UAAU,YACVI,QAASL,EAAMU,aAEdV,EAAMG,YC4DIQ,E,kDA5Db,WAAYX,GAAQ,IAAD,8BACjB,cAAMA,IAORY,WAAa,SAACV,GACZ,EAAKW,SAAS,CAAEL,MAAO,EAAKM,MAAMN,MAAQN,KATzB,EAYnBa,YAAc,WACZ,EAAKF,SAAS,CAAEL,MAAOQ,IAAc,EAAKF,MAAMN,UAVhD,EAAKM,MAAQ,CACXN,MAAO,IAJQ,E,0CAgBnB,WAAU,IAAD,OACP,OACE,yBAAKP,UAAU,OACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAOO,MAAOS,KAAKH,MAAMN,QACzB,yBAAKP,UAAU,OACb,kBAAC,EAAD,CAAQK,YAAaW,KAAKL,YAA1B,KACA,kBAAC,EAAD,CAAQN,YAAaW,KAAKL,YAA1B,KACA,kBAAC,EAAD,CAAQN,YAAaW,KAAKL,YAA1B,KACA,kBAAC,EAAD,CAAQN,YAAaW,KAAKL,YAA1B,MAGF,yBAAKX,UAAU,OACb,kBAAC,EAAD,CAAQK,YAAaW,KAAKL,YAA1B,KACA,kBAAC,EAAD,CAAQN,YAAaW,KAAKL,YAA1B,KACA,kBAAC,EAAD,CAAQN,YAAaW,KAAKL,YAA1B,KACA,kBAAC,EAAD,CAAQN,YAAaW,KAAKL,YAA1B,MAGF,yBAAKX,UAAU,OACb,kBAAC,EAAD,CAAQK,YAAaW,KAAKL,YAA1B,KACA,kBAAC,EAAD,CAAQN,YAAaW,KAAKL,YAA1B,KACA,kBAAC,EAAD,CAAQN,YAAaW,KAAKL,YAA1B,KACA,kBAAC,EAAD,CAAQN,YAAaW,KAAKL,YAA1B,MAGF,yBAAKX,UAAU,OACb,kBAAC,EAAD,CAAQK,YAAaW,KAAKL,YAA1B,KACA,kBAAC,EAAD,CAAQN,YAAaW,KAAKL,YAA1B,KACA,kBAAC,EAAD,CAAQN,YAAa,kBAAM,EAAKS,gBAAhC,KACA,kBAAC,EAAD,CAAQT,YAAaW,KAAKL,YAA1B,MAGF,yBAAKX,UAAU,OACb,kBAAC,EAAD,CAAaS,YAAa,kBAAM,EAAKG,SAAS,CAAEL,MAAO,OAAvD,gB,GAnDMU,aCHlBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.7c5452f7.chunk.js","sourcesContent":["import React from 'react';\r\nimport './button.scss';\r\n\r\nconst isOperator = val => !isNaN(val) || val === '.' || val === '=';\r\n\r\nexport const Button = props => (\r\n  <div\r\n    className={`button-wrapper ${\r\n      isOperator(props.children) ? null : 'operator'\r\n    }`}\r\n    onClick={() => props.handleClick(props.children)}\r\n  >\r\n    {props.children}\r\n  </div>\r\n);\r\n","import React from 'react';\r\nimport './input.scss';\r\n\r\nexport const Input = props => (\r\n  <div className=\"input\">\r\n    {props.input}\r\n  </div>\r\n);\r\n","import React from 'react';\r\nimport './clearButton.scss';\r\n\r\nexport const ClearButton = props => (\r\n  <div \r\n    className=\"clear-btn\" \r\n    onClick={props.handleClear}\r\n  >\r\n    {props.children}\r\n  </div>\r\n);\r\n","import React, { Component } from 'react';\nimport './app.scss';\nimport * as math from 'mathjs';\nimport { Button } from './components/Buttons/Button';\nimport { Input } from './components/Input/Input';\nimport { ClearButton } from './components/Buttons/ClearButton';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      input: '',\n    };\n  }\n\n  addToInput = (val) => {\n    this.setState({ input: this.state.input + val });\n  };\n\n  handleEqual = () => {\n    this.setState({ input: math.evaluate(this.state.input) });\n  };\n\n  render() {\n    return (\n      <div className=\"app\">\n        <div className=\"calc-wrapper\">\n          <Input input={this.state.input} />\n          <div className=\"row\">\n            <Button handleClick={this.addToInput}>7</Button>\n            <Button handleClick={this.addToInput}>8</Button>\n            <Button handleClick={this.addToInput}>9</Button>\n            <Button handleClick={this.addToInput}>/</Button>\n          </div>\n\n          <div className=\"row\">\n            <Button handleClick={this.addToInput}>4</Button>\n            <Button handleClick={this.addToInput}>5</Button>\n            <Button handleClick={this.addToInput}>6</Button>\n            <Button handleClick={this.addToInput}>*</Button>\n          </div>\n\n          <div className=\"row\">\n            <Button handleClick={this.addToInput}>1</Button>\n            <Button handleClick={this.addToInput}>2</Button>\n            <Button handleClick={this.addToInput}>3</Button>\n            <Button handleClick={this.addToInput}>+</Button>\n          </div>\n\n          <div className=\"row\">\n            <Button handleClick={this.addToInput}>.</Button>\n            <Button handleClick={this.addToInput}>0</Button>\n            <Button handleClick={() => this.handleEqual()}>=</Button>\n            <Button handleClick={this.addToInput}>-</Button>\n          </div>\n\n          <div className=\"row\">\n            <ClearButton handleClear={() => this.setState({ input: '' })}>\n              Clear\n            </ClearButton>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}